version: "3.3"
services:
  tiket-test:
    hostname: tiket-test
    container_name: tiket-test
    image: postgres
    networks: 
      - tiket-aem
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    expose:
      - "5433"
    ports:
      - "5433:5433"
    environment:
      POSTGRES_DB: tech-test
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
    command: -p 5433
     
  provider:
    networks: 
      - tiket-aem
    container_name: provider
    image: provider:latest
    ports:
      - "9922:9922"    
    restart: always
    depends_on:
      - redis
      - tiket-test
    volumes:
      - ./provider/config.json:/config.json
      - ./provider/sample.json:/sample.json
    healthcheck:
      test: curl --fail http://localhost:9922/ping || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s

  server:
    networks: 
      - tiket-aem
    container_name: server
    image: server:latest
    ports:
      - "9911:9911"    
    restart: always
    depends_on:
      - tiket-test
      - provider
      - redis
    volumes:
      - ./server/config.json:/config.json
    healthcheck:
        test: curl --fail http://localhost:9911/ping || exit 1
        interval: 40s
        timeout: 30s
        retries: 3
        start_period: 60s
  redis:
    networks: 
      - tiket-aem
    image: redis:latest
    ports:
      - 6379:6379
  
  adminer:
    networks: 
      - tiket-aem
    image: dockette/adminer
    ports:
      - 9696:80  
    links:
      - tiket-test

  prometheus:
    networks: 
      - tiket-aem
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    networks: 
      - tiket-aem
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

networks:
  tiket-aem:
    driver: bridge
# to keep volume for starvo-dashboard alive
volumes:
  mongo_vol:
    external: true
  pgdata:
    driver: local
